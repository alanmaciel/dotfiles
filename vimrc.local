let g:airline_theme='powerlineish'
"let g:tmuxline_powerline_separators = 1
"let g:airline#extensions#tmuxline#enabled = 1
"let g:tmuxline_preset = 'nightly_fox'
" ----------

" Alan Maciel vim file
" Last version 21 Feb 2015
 
filetype on
filetype plugin indent on
filetype plugin on
syntax on
syntax enable

"let g:solarized_termtrans = 1
"colorscheme solarized
call togglebg#map("<F5>")
let g:airline#extensions#tabline#enabled = 1

" deactivating arrow keys to force me to use hjkl
" noremap <Up> <NOP>
" noremap <Down> <NOP>
" noremap <Left> <NOP>
" noremap <Right> <NOP>
" 
" deactivating hjklm to force me ro use wordwise motions
" noremap h <NOP>
" noremap j <NOP>
" noremap k <NOP>
" noremap l <NOP>

" Yank text to the OS X clipboard
noremap <leader>y "*y
noremap <leader>yy "*Y

" Preserve indentation while pasting text from the OS X clipboard
noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

set nocompatible                  " Must come first because it changes other options.
set laststatus=2
set encoding=utf-8

set backupdir=./.backup,.,/tmp
set directory=.,./.backup,/tmp

set tabline=%!tabber#TabLine()

"set rtp+=~/dotfiles/vim/bundle/powerline/powerline/bindings/vim
"set t_Co=256
"let g:Powerline_symbols = 'unicode'
"let g:Powerline_symbols = 'fancy'

let g:airline_powerline_fonts = 1 

set listchars=trail:Â·
set list

" silent! call pathogen#runtime_append_all_bundles()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set relativenumber                " Show relative numbers
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

" set title                         " Set the terminal's title

set visualbell                    " No beeping.

set colorcolumn=80

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

" UNCOMMENT TO USE
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs

set laststatus=2                 " Always display the statusline in all windows
set noshowmode                   " Hide the default mode text (e.g. -- INSERT -- below the statusline)

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Set the tags file search order
set tags=./tags;

" use ack instead of grep
set grepprg=ack
" Or use vividchalk
"let g:solarized_termcolors=256
set background=dark
"colorscheme solarized

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" From Ben Orenstein toughtbot vim for rails
" Added by Alan Maciel 2 ago 2013
map <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>s :split <C-R>=expand("%:p:h") . '/'<CR>
map <Leader>v :vnew <C-R>=expand("%:p:h") . '/'<CR>

" Ben orenstein for blame
" Added by Alan Maciel 2 ago 2013
vmap <leader>b :<C-U>!git blame <C-R>=expand("%:p") <CR> \| sed -n <C-R>=line("'<") <CR>,<C-R>=line("'>") <CR>p <CR>

" Tim Pope Ragtag's 
inoremap <M-o>       <Esc>o
inoremap <C-j>       <Down>
let g:ragtag_global_maps = 1

" NerdTree fast toggle
map <F2> :NERDTreeToggle<CR>

" ZoomWin configuration
map <leader><leader> :ZoomWin<cr>

if has('gui_running')
  set background=light
else
  set background=dark
endif

" Execute ruby inside vim
map <leader>r :!ruby %<cr>

"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%81v.\+/

" Added by Alan Maciel 14 Nov 2013 
" to improve ctrlp speed 
" according to https://github.com/kien/ctrlp.vim/issues/313 
" Sane Ignore For ctrlp
 let g:ctrlp_custom_ignore = {
   \ 'dir': '\.git$\|\.hg$\|\.svn$\|\.yardoc\|public\/images\|public\/system\|data\|log\|tmp$',
   \ 'file': '\.exe$\|\.so$\|\.dat$'
   \ }

" Uncomment to use Jamis Buck's file opening plugin
"map <Leader>t :FuzzyFinderTextMate<Enter>

" Controversial...swap colon and semicolon for easier commands
"nnoremap ; :
"nnoremap : ;

"vnoremap ; :
"vnoremap : ;

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
autocmd BufNewFile,BufRead *_spec.rb compiler rspec

au WinLeave * set nocursorline nocursorcolumn
au WinEnter * set cursorline cursorcolumn
set cursorline cursorcolumn
hi CursorLine term=bold cterm=bold ctermbg=black
hi CursorColumn term=bold cterm=bold ctermbg=black
hi ColorColumn term=bold cterm=bold ctermbg=black
